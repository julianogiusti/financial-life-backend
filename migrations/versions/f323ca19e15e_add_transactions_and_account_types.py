"""Add transactions and account types

Revision ID: f323ca19e15e
Revises: 
Create Date: 2018-11-19 21:42:39.848739

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f323ca19e15e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_account_type_description'), 'account_type', ['description'], unique=False)
    op.create_table('transaction_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_type', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_token'), 'user', ['token'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('account_type', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('sum_on_dash', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_type'], ['account_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_account_created_at'), 'account', ['created_at'], unique=False)
    op.create_index(op.f('ix_account_name'), 'account', ['name'], unique=False)
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('value', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.Column('observation', sa.String(length=200), nullable=True),
    sa.Column('paid', sa.Boolean(), nullable=True),
    sa.Column('transaction_type', sa.Integer(), nullable=True),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['transaction_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_date_created'), 'transaction', ['date_created'], unique=False)
    op.create_table('transfer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_account', sa.Integer(), nullable=True),
    sa.Column('to_account', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('observation', sa.String(length=150), nullable=True),
    sa.Column('transfer_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['from_account'], ['account.id'], ),
    sa.ForeignKeyConstraint(['to_account'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transfer_transfer_date'), 'transfer', ['transfer_date'], unique=False)
    op.create_table('transaction_tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transaction_tag')
    op.drop_index(op.f('ix_transfer_transfer_date'), table_name='transfer')
    op.drop_table('transfer')
    op.drop_index(op.f('ix_transaction_date_created'), table_name='transaction')
    op.drop_table('transaction')
    op.drop_table('tag')
    op.drop_index(op.f('ix_account_name'), table_name='account')
    op.drop_index(op.f('ix_account_created_at'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_token'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('transaction_category')
    op.drop_index(op.f('ix_account_type_description'), table_name='account_type')
    op.drop_table('account_type')
    # ### end Alembic commands ###
